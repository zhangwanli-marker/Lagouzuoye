#
#'''
#yaml的用法
#    .大小写敏感
#    .使用缩进来表示层级关系
#    .缩进时不允许使用Tab键，只允许使用空格
#    .缩进 的空格数目不重要，只要相同层级的元素左侧对齐即可
#    .#表示注释，从这个字符一直带尾行都会被解析器忽略，这个和python的注释一样
#
#yaml支持的数据结构
#    .对象：键值对的集合，又称映射/好像/字典
#    .数字（列表）
#    .纯量：单个的、不可再分的值。字符串，布尔值、整数、浮点数、Null、时间、日期
#
#1.字典
#      yaml里面的键值对，也就是python里的字典（dict）数据类型
#        .使用冒号，冒号后面有空格。格式为key: wvlue
#        .使用缩进表示层级关系
#        .支持流式语法表示对象
#
#
#2.yaml可以实现嵌套
#
#
# '''
#3、引用
#锚点&和别名*，可以用来引用。

#4.!!yaml中使用!!做类型强行转换
#
###流式写法
- aa: 1
  bb: {c: 3, d: 4}



- - a
  - b
##流式写法
- c [a, b, c]
#
#f:
- - 2
  - 3
  - 4
  - 5

- str1: "string string2"
  int1: !!str 10
  int2: 10
  float1: 3.14
  bool1: true
  boll2: false
  none1: ~
  datatime: 2020-06-06
##
- default: &testenv
    adapter: 786
    ip: 10.122.133:8080
  development:
    qq: 12345543
    awwx: eert
    <<: *testenv
  prd:
    qdd: 2345
    <<: *testenv
##
